
## This is adapted from the example packages file for YADA; read
## /usr/share/doc/yada-doc/yada.txt.gz (from the yada-doc package) to
## find out how to customise it to your needs.

Source: apppot
Section: unknown
Priority: extra
Maintainer: Riccardo Murri <riccardo.murri@gmail.com>
Origin: GC3
Packaged-For: Grid Computing Competence Center, 
  University of Zurich
Standards-Version: 3.7.2
Homepage: http://apppot.googlecode.com/
# FIXME: this should likely point to an upstream .tar.gz ?
Upstream-Source: http://code.google.com/p/apppot/source/browse
Vcs-Browser: http://code.google.com/p/apppot/source/browse
Vcs-Svn: http://apppot.googlecode.com/svn/trunk/
Description: AppPot customizations
 This package installs the customizations that make a standard Debian
 GNU/Linux image into an AppPot image.
Copyright: GPL
 Copyright 2011 University of Zurich. All rights reserved.
Build-Depends: yada (>= %{YADA_VERSION}), sed
Build: sh
 # nothing to build, this is a metapackage
 true
Clean: sh
 # likewise, nothing to remove
 true

Package: apppot-start
Architecture: all
Depends: bash, coreutils, findutils, sed
Recommends: user-mode-linux, slirp, empty-expect
Description:  AppPot starter script
 This package installs the 'apppot-start' script 
 used to run AppPot VM images.
Install: sh
 # files that will be installed by this package on the AppPot system
 # see http://yada.alioth.debian.org/ for the syntax of the `yada` cmd
 sed -r -e "s/^VERSION='.+'/VERSION='%{VERSION}'/" apppot-start.sh > debian/apppot-start.sh
 yada install -script -as apppot-start debian/apppot-start.sh

Package: apppot
Architecture: all
Depends: bash, grep, initscripts, login, lsb-base (>= 3.0-6), mount, ncurses-bin, 
         screen, sed, sudo, sysvinit | upstart
Description:  AppPot boot customizations
 This package installs the *boot* customizations that make a standard
 Debian GNU/Linux image into an AppPot image.
 .
 Installing this package will change the boot process dramatically,
 so you don't want to do it unless you know what you are doing.
 .
 Repeat: DO NOT INSTALL THIS PACKAGE unless you know what you
 are doing.
Install: sh
 # files that will be installed by this package on the AppPot system
 # see http://yada.alioth.debian.org/ for the syntax of the `yada` cmd
 sed -r -e "s/^VERSION='.+'/VERSION='%{VERSION}'/" apppot-init.sh > debian/apppot-init.sh
 sed -r -e "s/^VERSION='.+'/VERSION='%{VERSION}'/" apppot-snap.sh > debian/apppot-snap.sh
 yada install -sscript -into /sbin -as apppot-init debian/apppot-init.sh 
 yada install -script -as apppot-snap debian/apppot-snap.sh
 yada install -dir /var/lib/apppot
 yada install -data -into /var/lib/apppot apppot-snap.exclude
Init: sh
 defaults 99
 # Chain-load the AppPot init script
 #
 # Copyright (c) 2011 GC3, University of Zurich
 #
 # This file can be distributed and modified according to 
 # the terms of the GNU Public Licence version 3, or
 # (at your option) any later version.
 #
 ### BEGIN INIT INFO
 # Provides:       apppot
 # Required-Start: $all
 # Required-Stop:
 # Default-Start:  2 3 4 5
 # Default-Stop:   0 1 6
 # X-Interactive: true
 # Short-Description: AppPot init script
 # Description:
 #    Hijack the boot process to execute
 #    any payload specified on the kernel
 #    command-line by apppot-start, or
 #    start an interactive shell.
 ### END INIT INFO
 .
 APPPOT_INIT=/sbin/apppot-init
 [ -x $APPPOT_INIT ] || exit 0
 .
 case "$1" in
   start|restart|force-reload)
     # pass control to the real init script, 
     # but only we're not running as a result 
     # of `dpkg --configure`
     if [ -z "$DPKG_MAINTSCRIPT_NAME" ]; then
          exec $APPPOT_INIT
     else
          true # FIXME: log message
     fi
     ;;
   stop)
     # nothing to do
     true
     ;;
 esac
 .
 exit 0
Postinst: sh
 # disable the TTY console entries in /etc/inittab,
 # `apppot-init` will start an interactive shell if needed
 if [ -w /etc/inittab ]; then
   # comment out `getty` lines
   sed -r -e '/^[^#].+\/sbin\/getty/s|^|#AppPot#|' -i /etc/inittab
   # signal `init` to re-read /etc/inittab
   #kill -1 1
 fi
 # replace /etc/rc.local if it contains old apppot-init.sh code.
 if grep -F -q '==== Starting AppPot' /etc/rc.local; then
   mv /etc/rc.local /etc/rc.local.apppot-bak
   echo '#!/bin/sh -e' >> /etc/rc.local
   echo '# The old /etc/rc.local script was removed by AppPot' >> /etc/rc.local
   echo '# because it contained old AppPot boot code,' >> /etc/rc.local
   echo '# and replaced with this copy, that -just like' >> /etc/rc.local
   echo "# Debian's default one- does nothing." >> /etc/rc.local
   echo "# The old script has been renamed to '/etc/rc.local.apppot-bak'." >> /etc/rc.local
   echo "exit 0" >> /etc/rc.local
 fi
Postrm: sh
 # (re)enable the TTY console entries in /etc/inittab
 if [ -w /etc/inittab ]; then
   # undo commenting
   sed -r -e 's|^#AppPot#||' -i /etc/inittab
   # signal `init` to re-read /etc/inittab
   #kill -1 1
 fi
